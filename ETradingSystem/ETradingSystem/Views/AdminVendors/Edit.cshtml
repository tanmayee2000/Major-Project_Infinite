@model ETradingSystem.Models.Vendor

@{

    ViewBag.Title = "Edit Vendor Category";

}

<h2>Edit Vendor Category</h2>

@using (Html.BeginForm())

{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Vendor Details</h4>

        <hr />

        @Html.HiddenFor(model => model.Vendor_Id)

        <!-- Display Vendor Name as read-only -->

        <div class="form-group">

            @Html.LabelFor(model => model.Vendor_Name, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                <p class="form-control-static">@Html.DisplayFor(model => model.Vendor_Name)</p>

            </div>

        </div>

        <!-- Display Vendor Email as read-only -->

        <div class="form-group">

            @Html.LabelFor(model => model.Vendor_Email, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                <p class="form-control-static">@Html.DisplayFor(model => model.Vendor_Email)</p>

            </div>

        </div>

        <!-- Display Mobile Number as read-only -->

        <div class="form-group">

            @Html.LabelFor(model => model.Mobile_Number, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                <p class="form-control-static">@Html.DisplayFor(model => model.Mobile_Number)</p>

            </div>

        </div>

        <!-- Display Address as read-only -->

        <div class="form-group">

            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                <p class="form-control-static">@Html.DisplayFor(model => model.Address)</p>

            </div>

        </div>

        <!-- Display Status as read-only -->

        <div class="form-group">

            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                <p class="form-control-static">@Html.DisplayFor(model => model.Status)</p>

            </div>

        </div>

        <!-- Editable Category Field -->

        <div class="form-group">

            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">

                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">

                <input type="submit" value="Save" class="btn btn-default" />

            </div>

        </div>

    </div>

}

<div>

    @Html.ActionLink("Back to List", "Index")

</div>

